{
    "swagger": "2.0",
    "info": {
        "description": "Business Identity & Access API",
        "version": "1.0",
        "title": "Business Identity & Access API",
        "contact": {
            "name": "Open Banking team",
            "url": "https://nordeaopenbanking.com",
            "email": "support@nordeaopenbanking.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "x-ibm-name": "business-auth-v1",
        "x-version": "1.0"
    },
    "host": "",
    "basePath": "/",
    "tags": [
        {
            "name": "authorize-v1",
            "description": "OAuth 2.0 authentication with support for scopes"
        }
    ],
    "paths": {
        "/v1/authorize": {
            "post": {
                "tags": [
                    "authorize-v1"
                ],
                "summary": "Start an authorization flow and create authorization resource",
                "operationId": "initiateAuthorizationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "Request for authorization initialization",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitialAuthorizationRequest"
                        },
                        "x-availabilityStatus": "Beta"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response with a JWT token with TPP_IDENTIFIED as the role",
                        "schema": {
                            "$ref": "#/definitions/InitialAuthorizationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized with failure code:\n* error.apikey.missing = Missing API key. This operation requires API key, but it was missing.\n* error.token = Unspecified error with supplied token.\n* error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.\n* error.token.expired = Access token has expired.",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden with failure code:\n* error.resource.denied = Requested resource is not authorized by access token.",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    }
                },
                "deprecated": false,
                "x-availabilityStatus": "Beta"
            }
        },
        "/v1/authorize/token": {
            "post": {
                "tags": [
                    "authorize-v1"
                ],
                "summary": "Exchange access token",
                "description": "This is used for exchanging the auth code for an access token.",
                "operationId": "getAccessTokenUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token identifying client",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request",
                        "description": "This is used for exchanging the auth code for an access token.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccessTokenRequest"
                        },
                        "x-availabilityStatus": "Beta"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Response with a JWT token for AIS and PIS requests",
                        "schema": {
                            "$ref": "#/definitions/AccessTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failure",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authorization failure",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "ACCOUNTS_BROADBAND"
                        ]
                    },
                    {
                        "clientId": []
                    }
                ],
                "deprecated": false,
                "x-availabilityStatus": "Beta"
            }
        },
        "/v1/authorize/{access_id}": {
            "get": {
                "tags": [
                    "authorize-v1"
                ],
                "summary": "Get status of the authorization process",
                "operationId": "getStatusUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token identifying client",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "access_id",
                        "in": "path",
                        "description": "Access ID requested for authorization status",
                        "required": true,
                        "type": "string",
                        "x-availabilityStatus": "Beta"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - response includes status of specified authorization request",
                        "schema": {
                            "$ref": "#/definitions/AuthorizationCodeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized with failure code:\n* error.apikey.missing = Missing API key. This operation requires API key, but it was missing.\n* error.token = Unspecified error with supplied token.\n* error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.\n* error.token.expired = Access token has expired.",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Credential failure",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "ACCOUNTS_BROADBAND"
                        ]
                    },
                    {
                        "clientId": []
                    }
                ],
                "deprecated": false,
                "x-availabilityStatus": "Beta"
            },
            "put": {
                "tags": [
                    "authorize-v1"
                ],
                "summary": "Confirm an authorization request",
                "operationId": "addAuthorizerUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token identifying client",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "access_id",
                        "in": "path",
                        "description": "Access ID requested for authorization confirmation",
                        "required": true,
                        "type": "string",
                        "x-availabilityStatus": "Beta"
                    },
                    {
                        "in": "body",
                        "name": "request",
                        "description": "Request for authorization confirmation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddAuthorizerRequest"
                        },
                        "x-availabilityStatus": "Beta"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response with a request confirmation",
                        "schema": {
                            "$ref": "#/definitions/AuthorizationStatusResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication failure",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authorization failure",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ExternalErrorResponse"
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "ACCOUNTS_BROADBAND"
                        ]
                    },
                    {
                        "clientId": []
                    }
                ],
                "deprecated": false,
                "x-availabilityStatus": "Beta"
            }
        }
    },
    "securityDefinitions": {
        "clientId": {
            "type": "apiKey",
            "name": "X-IBM-Client-Id",
            "in": "header"
        },
        "oauth2": {
            "type": "oauth2",
            "authorizationUrl": "/v1/authorize",
            "tokenUrl": "/v1/authorize/token",
            "flow": "accessCode",
            "scopes": {
                "ACCOUNTS_BROADBAND": "ACCOUNTS_BROADBAND scope type"
            }
        }
    },
    "definitions": {
        "AccessTokenRequest": {
            "type": "object",
            "required": [
                "access_id",
                "authorization_code"
            ],
            "properties": {
                "access_id": {
                    "type": "string",
                    "description": "Access ID",
                    "x-availabilityStatus": "Beta"
                },
                "authorization_code": {
                    "type": "string",
                    "description": "Authorization code",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "AccessTokenRequest",
            "description": "Request for access token"
        },
        "AccessTokenResponse": {
            "type": "object",
            "properties": {
                "group_header": {
                    "description": "Standard format response header",
                    "$ref": "#/definitions/ExternalResponseHeader",
                    "x-availabilityStatus": "Beta"
                },
                "response": {
                    "description": "Payload",
                    "$ref": "#/definitions/Token",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "AccessTokenResponse",
            "description": "The access token (JWT)"
        },
        "AddAuthorizerRequest": {
            "type": "object",
            "required": [
                "authorizer_id"
            ],
            "properties": {
                "authorizer_id": {
                    "type": "string",
                    "example": 3314162233,
                    "description": "Corporate Netbank login id of nominated authorizer",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "AddAuthorizerRequest",
            "description": "Nominate an authorizer (Corporate Netbank Administrator) who will confirm the access authorization request"
        },
        "AuthorizationCode": {
            "type": "object",
            "required": [
                "links",
                "status"
            ],
            "properties": {
                "authorization_code": {
                    "type": "string",
                    "example": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiZGlyIn0..duRyOpFN9OHfF4zq.9exR4Tp8eO-jorDtljriNEQO-mTknGC6DWbvBSmgO9whUaJcJckU2QXX754v7-BnRFrWjExxvf5taoSBmTPVgq6ymVXheE5qFHPyHGtpMV5iUjzV1H9Huhgun46GESZd4eTu4M7TNVduGu6XLdksETDWZYOag6jJD05WrZZoVDwCq87Abl0aCIE0vmY7xwpfSopNcqd1vPrGBq2lZybzzEyXOE4NefVtbmPvywch1H-zp16JhVLLIIsiQ9x8eJlrf1oK67DcAoBRpHKQqr-6c8YcSDQXFkoNdXUaqd6fUCVEvq-iBkjpj7MmrDTw12HCE8KVN1VWQLe7f3D-TQur37BRz5fOXL13IqgJdZdgYQ3hp-oy-B1oYgjB34ZOPsPm1ghdxDxjmeDFV51h1_SupJuogMwN6AZyzX7LeuNCq_8R_Ez8tznOnE8ILhw367kltDYJBTJvu1YU_CD_-HhcD3SyjU9bOKI93VSn3NLp2618r_uxTk8RgixD_PRw2HzKgfCWwImUbl8k-kITtKTfsjbgv3nOygcapq82NsBlQx2ZUpoVye7KXNtA2WSPKls7_4whg_Dwedb9IKr34F3CzomZnGFCRcqfArLJY1zY4nLZix57SctvdqAdcgAys0lbsY4oDe1m7S2rwp-PLWCkvZSDWATmYCG_6Ah2Oyy1DNNqa-NrFGgjDHhJJjaBeNCCLJ39WWlCl5EAUCjb08HNsRtGgeMboYzWDjbqRFi_r0-2fRE6LuAwNJaeSbz0MKRW03BNzkevdhp8HSIPq1UYyy_wtiwOxm4JTp_VNXkoM0-IoTXN6E4DZQ.M5SwrJzAeq2gDdSnkB0QNw",
                    "description": "authorization_code",
                    "x-availabilityStatus": "Beta"
                },
                "links": {
                    "type": "array",
                    "description": "HATEOAS inspired links",
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "x-availabilityStatus": "Beta"
                },
                "status": {
                    "type": "string",
                    "example": "PENDING",
                    "description": "Current status of authorization request",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "AuthorizationCode",
            "description": "Response for authorization code"
        },
        "AuthorizationCodeResponse": {
            "type": "object",
            "properties": {
                "group_header": {
                    "description": "Standard format response header",
                    "$ref": "#/definitions/ExternalResponseHeader",
                    "x-availabilityStatus": "Beta"
                },
                "response": {
                    "description": "Payload",
                    "$ref": "#/definitions/AuthorizationCode",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "AuthorizationCodeResponse",
            "description": "Response for authorization code"
        },
        "AuthorizationStatus": {
            "type": "object",
            "required": [
                "links",
                "status"
            ],
            "properties": {
                "links": {
                    "type": "array",
                    "description": "HATEOAS inspired links",
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "x-availabilityStatus": "Beta"
                },
                "status": {
                    "type": "string",
                    "example": "PENDING",
                    "description": "Current status of authorization request",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "AuthorizationStatus",
            "description": "Response for authorization status"
        },
        "AuthorizationStatusResponse": {
            "type": "object",
            "properties": {
                "group_header": {
                    "description": "Standard format response header",
                    "$ref": "#/definitions/ExternalResponseHeader",
                    "x-availabilityStatus": "Beta"
                },
                "response": {
                    "description": "Payload",
                    "$ref": "#/definitions/AuthorizationStatus",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "AuthorizationStatusResponse",
            "description": "Response for authorization status"
        },
        "ExternalError": {
            "type": "object",
            "properties": {
                "http_code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP error for response",
                    "x-availabilityStatus": "Stable"
                },
                "request": {
                    "description": "Error details",
                    "$ref": "#/definitions/ExternalRequestEcho",
                    "x-availabilityStatus": "Stable"
                },
                "failures": {
                    "type": "array",
                    "description": "More details on the occurred error",
                    "items": {
                        "$ref": "#/definitions/ExternalFailure"
                    },
                    "x-availabilityStatus": "Stable"
                }
            },
            "title": "ExternalError",
            "description": "Error information"
        },
        "ExternalErrorResponse": {
            "type": "object",
            "properties": {
                "group_header": {
                    "description": "Standard format response header",
                    "$ref": "#/definitions/ExternalResponseHeaderV2",
                    "x-availabilityStatus": "Stable"
                },
                "error": {
                    "description": "Payload",
                    "$ref": "#/definitions/ExternalError",
                    "x-availabilityStatus": "Stable"
                }
            },
            "title": "ExternalErrorResponse",
            "description": "Error response"
        },
        "ExternalFailure": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Failure code",
                    "x-availabilityStatus": "Stable"
                },
                "description": {
                    "type": "string",
                    "description": "Failure description",
                    "x-availabilityStatus": "Stable"
                },
                "path": {
                    "type": "string",
                    "description": "The failed component path",
                    "x-availabilityStatus": "Stable"
                },
                "type": {
                    "type": "string",
                    "description": "Failure type",
                    "x-availabilityStatus": "Stable"
                }
            },
            "title": "ExternalFailure",
            "description": "Failure description"
        },
        "ExternalRequestEcho": {
            "type": "object",
            "required": [
                "message_identifier"
            ],
            "properties": {
                "message_identifier": {
                    "type": "string",
                    "description": "Original request id for correlation purposes",
                    "x-availabilityStatus": "Stable"
                },
                "url": {
                    "type": "string",
                    "description": "Original request url",
                    "x-availabilityStatus": "Stable"
                }
            },
            "title": "ExternalRequestEcho",
            "description": "Original request information"
        },
        "ExternalResponseHeader": {
            "type": "object",
            "properties": {
                "creation_date_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Response creation time",
                    "x-availabilityStatus": "Beta"
                },
                "http_code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP code for response",
                    "x-availabilityStatus": "Beta"
                },
                "message_identification": {
                    "type": "string",
                    "description": "Original request id for correlation purposes",
                    "x-availabilityStatus": "Beta"
                },
                "message_pagination": {
                    "description": "Details of paginated response",
                    "$ref": "#/definitions/Pagination",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "ExternalResponseHeader",
            "description": "External response header"
        },
        "ExternalResponseHeaderV2": {
            "type": "object",
            "properties": {
                "http_code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "HTTP code for response",
                    "x-availabilityStatus": "Stable"
                },
                "message_identification": {
                    "type": "string",
                    "description": "Original request id for correlation purposes",
                    "x-availabilityStatus": "Stable"
                },
                "creation_date_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Response creation time",
                    "x-availabilityStatus": "Stable"
                },
                "message_pagination": {
                    "description": "Details of paginated response",
                    "$ref": "#/definitions/PaginationV2",
                    "x-availabilityStatus": "Stable"
                }
            },
            "title": "ExternalResponseHeaderV2",
            "description": "External response header"
        },
        "InitialAuthorization": {
            "type": "object",
            "required": [
                "links",
                "status"
            ],
            "properties": {
                "access_id": {
                    "type": "string",
                    "example": "286beebf-d386-43ff-9607-84cc2c8dad4d",
                    "description": "Resource identifier of newly created access authorization request",
                    "x-availabilityStatus": "Beta"
                },
                "links": {
                    "type": "array",
                    "description": "HATEOAS inspired links",
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "x-availabilityStatus": "Beta"
                },
                "status": {
                    "type": "string",
                    "example": "PENDING",
                    "description": "Current status of authorization request",
                    "x-availabilityStatus": "Beta"
                },
                "tpp_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                    "description": "JWT token supplied to authorize client in subsequent operations on this access authorization resource",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "InitialAuthorization",
            "description": "Response for authorization initialization"
        },
        "InitialAuthorizationRequest": {
            "type": "object",
            "required": [
                "duration",
                "scope"
            ],
            "properties": {
                "duration": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3600,
                    "description": "Duration of desired access token in minutes",
                    "x-availabilityStatus": "Beta"
                },
                "scope": {
                    "type": "array",
                    "description": "List of access scopes required",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ACCOUNTS_BROADBAND"
                        ]
                    },
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "InitialAuthorizationRequest",
            "description": "Initiate a new access authorization request"
        },
        "InitialAuthorizationResponse": {
            "type": "object",
            "properties": {
                "group_header": {
                    "description": "Standard format response header",
                    "$ref": "#/definitions/ExternalResponseHeader",
                    "x-availabilityStatus": "Beta"
                },
                "response": {
                    "description": "Payload",
                    "$ref": "#/definitions/InitialAuthorization",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "InitialAuthorizationResponse",
            "description": "Response upon creation of new access authorization request"
        },
        "Link": {
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "properties": {
                "href": {
                    "type": "string",
                    "example": "/v1/authorize/token",
                    "description": "Relative path to the linked resource",
                    "x-availabilityStatus": "Beta"
                },
                "rel": {
                    "type": "string",
                    "example": "status",
                    "description": "Describes the nature of the link, e.g. 'details' for a link to the detailed information of a listed resource.",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "Link",
            "description": "Context specific link (only GET supported)"
        },
        "Pagination": {
            "type": "object",
            "properties": {
                "continuation_key": {
                    "type": "string",
                    "description": "Resource listing may return a continuationKey if there's more results available. Request may be retried with the continuationKey, but otherwise same parameters, in order to get more results.",
                    "x-availabilityStatus": "Beta"
                }
            },
            "title": "Pagination",
            "description": "Details of paginated response"
        },
        "PaginationV2": {
            "type": "object",
            "properties": {
                "continuation_key": {
                    "type": "string",
                    "description": "Resource listing may return a continuationKey if there's more results available. Request may be retried with the continuationKey, but otherwise same parameters, in order to get more results.",
                    "x-availabilityStatus": "Stable"
                }
            },
            "title": "PaginationV2",
            "description": "Details of paginated response"
        },
        "Token": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiZGlyIn0..EM2YgJGre7OTIpmA.8GmpStB05uh4u_1wrEpyVCV_P5XwTcbL7zF_NsZJaMcZvo3B78gqhDR2lCCGLbTTImM4ILGHEQXO5Q7-obmdacIk9jcRr2eg5lTj_MBk9ch9yCMGh1NLEtXfOuHO1WzLoR6njQLDHdvvA2M3MEnVToqF6NdRI5f1hpWwC75TwUJWG50YTTYUBJskGPuRMLPfuTH-sncyVpI5Pj-XwXgcwOuXq8mz87DE1ZCCxPollReFZFsriQO3FeAqdgKigLaDH_WsoromxG2RAz6u4de-IYwXeWhsyq81SvOICE29kLMl9uxCvp6frYzOHoe7rfSaJiPhWGLn4_l29GimVNepQi1BadFqvHUyr7pUtO4Nx8e3piN7RV4DpMu1mf8_BYJaNUMyaeismu7RS9CmXm8wiEwgxK6f6vSOZxK6X8k7EHNKmZJZyR0q5ZRtFMzNa27tFah5_CybeJ86dJYIoaS1yG4rwBhokM06lVwAUAnpjXSRdoD7VUeNeg70DvTS2rtLa_w0_RLpva-iGkup-GIQyURK_jDZF2dVlRIanA8cwF6PZTA4cVslCd6EScJx9AHG87MmiWs6j0KOLZRyun3N3BEeRrjjcPk_lc3zcd8E2MZB4l-4o69cYvgAk1DpkxB__3IyuVkTEGwxlvT04anjsGLXEiunvQnDlAyEApr4xBeIGA2tAU8sstOQgGQffRj17iXWFgh4n5uHP77wrA4_d1tydAGCBhEVk6tsUVA81cavlwEfF53Yn1SK9bVofKv412tzU8fzNecni0IAsuWsCLGX.z3MMhpzmMp-GwdbTSl2rWQ",
                    "description": "Access token",
                    "x-availabilityStatus": "Stable"
                },
                "expires_in": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1209599,
                    "description": "Token expiration time",
                    "x-availabilityStatus": "Stable"
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer",
                    "description": "Token type",
                    "enum": [
                        "BEARER"
                    ],
                    "x-availabilityStatus": "Stable"
                }
            },
            "title": "Token",
            "description": "The Access token (JWT)"
        }
    }
}