{
  "swagger": "2.0",
  "info": {
    "description": "Payments API SEPA credit transfer",
    "version": "3.0",
    "title": "Payments API SEPA credit transfer",
    "contact": {
      "name": "Open Banking team",
      "url": "https://nordeaopenbanking.com",
      "email": "support@nordeaopenbanking.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-ibm-name": "sepa-payments-v3",
    "x-version": 3
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "payments-v3",
      "description": "Payment initiation and confirmation"
    }
  ],
  "paths": {
    "/v3/payments/sepa": {
      "get": {
        "tags": [
          "payments-v3"
        ],
        "summary": "Get a list of payments created for the user. SEPA access token will return no payments while used for the domestic endpoint and vice versa.",
        "operationId": "getPaymentsUsingGET_3",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentListResponse"
            }
          },
          "401": {
            "description": "Unauthorized with failure code:\n* error.apikey.missing = Missing API key. This operation requires API key, but it was missing.\n* error.token = Unspecified error with supplied token.\n* error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.\n* error.token.expired = Access token has expired.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden with failure code:\n* error.resource.denied = Requested resource is not authorized by access token.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-availabilityInfo": "V2 will be deprecated and v3 will be snake_case release",
        "x-availabilityStatus": "Stable"
      },
      "post": {
        "tags": [
          "payments-v3"
        ],
        "summary": "Initiate payment",
        "operationId": "paymentInitiateUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Response-Scenarios",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "AuthorizationSkipAccessControl"
            ],
            "x-availabilityStatus": "SandboxOnly"
          },
          {
            "in": "body",
            "name": "createPaymentRequestV3",
            "description": "Request to create a new payment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePaymentRequest"
            },
            "x-availabilityInfo": "V2 will be deprecated and v3 will be snake_case release",
            "x-availabilityStatus": "Stable"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PaymentResponse"
            }
          },
          "401": {
            "description": "Unauthorized with failure code:\n* error.apikey.missing = Missing API key. This operation requires API key, but it was missing.\n* error.token = Unspecified error with supplied token.\n* error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.\n* error.token.expired = Access token has expired.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden with failure code:\n* error.resource.denied = Requested resource is not authorized by access token.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-availabilityInfo": "V2 will be deprecated and v3 will be snake_case release",
        "x-availabilityStatus": "Stable"
      }
    },
    "/v3/payments/sepa/{paymentId}": {
      "get": {
        "tags": [
          "payments-v3"
        ],
        "summary": "Get payment by payment id",
        "operationId": "getPaymentUsingGET_3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Response-Scenarios",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "AuthorizationSkipAccessControl"
            ],
            "x-availabilityStatus": "SandboxOnly"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Payment id of the payment to get",
            "required": true,
            "type": "string",
            "x-availabilityInfo": "V2 will be deprecated and v3 will be snake_case release",
            "x-availabilityStatus": "Stable"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentResponse"
            }
          },
          "401": {
            "description": "Unauthorized with failure code:\n* error.apikey.missing = Missing API key. This operation requires API key, but it was missing.\n* error.token = Unspecified error with supplied token.\n* error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.\n* error.token.expired = Access token has expired.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden with failure code:\n* error.resource.denied = Requested resource is not authorized by access token.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-availabilityInfo": "V2 will be deprecated and v3 will be snake_case release",
        "x-availabilityStatus": "Stable"
      }
    },
    "/v3/payments/sepa/{paymentId}/confirm": {
      "put": {
        "tags": [
          "payments-v3"
        ],
        "summary": "Confirm a previously initiated payment",
        "operationId": "paymentConfirmUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-Response-Scenarios",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "AuthorizationSkipAccessControl",
              "PaymentSigningExpires",
              "PaymentMissingFunds",
              "PaymentOnHold"
            ],
            "x-availabilityStatus": "SandboxOnly"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Payment id of the payment to confirm",
            "required": true,
            "type": "string",
            "x-availabilityInfo": "V2 will be deprecated and v3 will be snake_case release",
            "x-availabilityStatus": "Stable"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentResponse"
            }
          },
          "401": {
            "description": "Unauthorized with failure code:\n* error.apikey.missing = Missing API key. This operation requires API key, but it was missing.\n* error.token = Unspecified error with supplied token.\n* error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.\n* error.token.expired = Access token has expired.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden with failure code:\n* error.resource.denied = Requested resource is not authorized by access token.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "409": {
            "description": "Conflict with failure code:\n* nordea.error.payment.confirm.conflict = There is existing confirmation in process. Wait and retry.\n* nordea.error.payment.update.illegal_state = Action not allowed with current payment status.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-availabilityInfo": "V2 will be deprecated and v3 will be snake_case release",
        "x-availabilityStatus": "Stable"
      }
    }
  },
  "security": [
    {
      "clientId": [],
      "clientSecret": []
    }
  ],
  "securityDefinitions": {
    "clientId": {
      "in": "header",
      "name": "X-IBM-Client-Id",
      "type": "apiKey"
    },
    "clientSecret": {
      "in": "header",
      "name": "X-IBM-Client-Secret",
      "type": "apiKey"
    },
    "oauth2": {
      "authorizationUrl": "/v1/authentication",
      "flow": "accessCode",
      "scopes": {
        "api": "Open Banking API"
      },
      "tokenUrl": "/v1/authentication/access_token",
      "type": "oauth2"
    }
  },
  "definitions": {
    "AccountNumber": {
      "type": "object",
      "required": [
        "_type",
        "value"
      ],
      "properties": {
        "_type": {
          "type": "string",
          "description": "Type of account number",
          "enum": [
            "IBAN",
            "BBAN_SE",
            "BBAN_DK",
            "BBAN_NO"
          ],
          "x-availabilityStatus": "Stable"
        },
        "currency": {
          "type": "string",
          "description": "Currency of account",
          "enum": [
            "EUR",
            "SEK",
            "DKK",
            "NOK"
          ],
          "x-availabilityStatus": "Stable"
        },
        "value": {
          "type": "string",
          "example": "FI1350001520000081",
          "description": "Actual account number",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "AccountNumber",
      "description": "Account number"
    },
    "CreatePaymentRequest": {
      "type": "object",
      "required": [
        "amount",
        "creditor",
        "currency",
        "debtor"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "example": 123.45,
          "description": "Monetary amount of the payment. Decimal max values: FI SEPA: 6(11,2); SE:(14,2); DK:(9,2)",
          "x-availabilityStatus": "Stable",
          "x-exclusiveMinimum": "true",
          "x-minimum": "0"
        },
        "creditor": {
          "description": "Creditor of the payment",
          "$ref": "#/definitions/PaymentCreditorV3",
          "x-availabilityStatus": "Stable"
        },
        "currency": {
          "type": "string",
          "description": "Currency code according to ISO 4217. Possible values: FI SEPA:EUR; SE:SEK; DK:DKK",
          "enum": [
            "EUR",
            "SEK",
            "DKK",
            "NOK"
          ],
          "x-availabilityStatus": "Stable"
        },
        "debtor": {
          "description": "Debtor of the payment",
          "$ref": "#/definitions/PaymentDebtorV3",
          "x-availabilityStatus": "Stable"
        },
        "external_id": {
          "type": "string",
          "description": "Unique identification as assigned by a partner to identify the payment.",
          "x-availabilityStatus": "Stable"
        },
        "urgency": {
          "type": "string",
          "description": "Urgency of the payment.\nNB: This field is only supported for DK Domestic payments.",
          "enum": [
            "STANDARD",
            "EXPRESS",
            "SAMEDAY"
          ],
          "x-availabilityStatus": "Beta"
        }
      },
      "title": "CreatePaymentRequest",
      "description": "Payment to create"
    },
    "ExternalError": {
      "type": "object",
      "properties": {
        "failures": {
          "type": "array",
          "description": "More details on the occurred error",
          "items": {
            "$ref": "#/definitions/ExternalFailure"
          },
          "x-availabilityStatus": "Stable"
        },
        "httpCode": {
          "type": "integer",
          "format": "int32",
          "description": "HTTP error for response",
          "x-availabilityStatus": "Stable"
        },
        "request": {
          "description": "Error details",
          "$ref": "#/definitions/ExternalRequestEcho",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "ExternalError",
      "description": "Error information"
    },
    "ExternalErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "description": "Payload",
          "$ref": "#/definitions/ExternalError",
          "x-availabilityStatus": "Stable"
        },
        "groupHeader": {
          "description": "Standard format response header",
          "$ref": "#/definitions/ExternalResponseHeaderV2",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "ExternalErrorResponse",
      "description": "Error response"
    },
    "ExternalFailure": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Failure code",
          "x-availabilityStatus": "Stable"
        },
        "description": {
          "type": "string",
          "description": "Failure description",
          "x-availabilityStatus": "Stable"
        },
        "path": {
          "type": "string",
          "description": "The failed component path",
          "x-availabilityStatus": "Stable"
        },
        "type": {
          "type": "string",
          "description": "Failure type",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "ExternalFailure",
      "description": "Failure description"
    },
    "ExternalRequestEcho": {
      "type": "object",
      "required": [
        "messageIdentifier"
      ],
      "properties": {
        "messageIdentifier": {
          "type": "string",
          "description": "Original request id for correlation purposes",
          "x-availabilityStatus": "Stable"
        },
        "url": {
          "type": "string",
          "description": "Original request url",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "ExternalRequestEcho",
      "description": "Original request information"
    },
    "ExternalResponseHeaderV2": {
      "type": "object",
      "properties": {
        "creationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Response creation time",
          "x-availabilityStatus": "Stable"
        },
        "httpCode": {
          "type": "integer",
          "format": "int32",
          "description": "HTTP code for response",
          "x-availabilityStatus": "Stable"
        },
        "messageIdentification": {
          "type": "string",
          "description": "Original request id for correlation purposes",
          "x-availabilityStatus": "Stable"
        },
        "messagePagination": {
          "description": "Details of paginated response",
          "$ref": "#/definitions/PaginationV2",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "ExternalResponseHeaderV2",
      "description": "External response header"
    },
    "ExternalResponseHeaderV3": {
      "type": "object",
      "properties": {
        "creation_date_time": {
          "type": "string",
          "format": "date-time",
          "description": "Response creation time",
          "x-availabilityStatus": "Stable"
        },
        "http_code": {
          "type": "integer",
          "format": "int32",
          "description": "HTTP code for response",
          "x-availabilityStatus": "Stable"
        },
        "message_identification": {
          "type": "string",
          "description": "Original request id for correlation purposes",
          "x-availabilityStatus": "Stable"
        },
        "message_pagination": {
          "description": "Details of paginated response",
          "$ref": "#/definitions/PaginationV2",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "ExternalResponseHeaderV3",
      "description": "External response header"
    },
    "Fee": {
      "type": "object",
      "properties": {
        "_type": {
          "type": "string",
          "description": "Example 'domestic_transaction' only for DK domestic payments",
          "x-availabilityStatus": "Beta"
        },
        "country_code": {
          "type": "string",
          "description": "Country code according to ISO Alpha-2",
          "enum": [
            "FI",
            "SE",
            "DK",
            "NO",
            "DE",
            "EE",
            "LV",
            "LT",
            "PL",
            "RU",
            "LU",
            "CH",
            "US",
            "SG",
            "GB",
            "UK"
          ],
          "x-availabilityStatus": "Beta"
        },
        "currency_code": {
          "type": "string",
          "description": "Currency code according to ISO 4217",
          "enum": [
            "EUR",
            "SEK",
            "DKK",
            "NOK"
          ],
          "x-availabilityStatus": "Beta"
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "Value of the fee.",
          "x-availabilityStatus": "Beta"
        }
      },
      "title": "Fee",
      "description": "An amount the bank will charge for executing the payment"
    },
    "Link": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "Relative path to the linked resource",
          "x-availabilityStatus": "Stable"
        },
        "rel": {
          "type": "string",
          "description": "Describes the nature of the link, e.g. 'details' for a link to the detailed information of a listed resource.",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "Link",
      "description": "Context specific link (only GET supported)"
    },
    "PaginationV2": {
      "type": "object",
      "properties": {
        "continuationKey": {
          "type": "string",
          "description": "Resource listing may return a continuationKey if there's more results available. Request may be retried with the continuationKey, but otherwise same parameters, in order to get more results.",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "PaginationV2",
      "description": "Details of paginated response"
    },
    "Payment": {
      "type": "object",
      "required": [
        "_id",
        "amount",
        "creditor",
        "currency",
        "debtor",
        "timestamp"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique payment identifier assigned for new payment",
          "x-availabilityStatus": "Stable"
        },
        "_links": {
          "type": "array",
          "description": "HATEOAS inspired links",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-availabilityStatus": "Stable"
        },
        "amount": {
          "type": "number",
          "example": 123.45,
          "description": "Monetary amount of the payment. Decimal max values: FI SEPA: 6(11,2); SE:(14,2); DK:(9,2)",
          "x-availabilityStatus": "Stable",
          "x-exclusiveMinimum": "true",
          "x-minimum": "0"
        },
        "creditor": {
          "description": "Creditor of the payment",
          "$ref": "#/definitions/PaymentCreditorV3",
          "x-availabilityStatus": "Stable"
        },
        "currency": {
          "type": "string",
          "description": "Currency code according to ISO 4217. Possible values: FI SEPA:EUR; SE:SEK; DK:DKK",
          "enum": [
            "EUR",
            "SEK",
            "DKK",
            "NOK"
          ],
          "x-availabilityStatus": "Stable"
        },
        "debtor": {
          "description": "Debtor of the payment",
          "$ref": "#/definitions/PaymentDebtorV3",
          "x-availabilityStatus": "Stable"
        },
        "external_id": {
          "type": "string",
          "description": "Unique identification as assigned by a partner to identify the payment.",
          "x-availabilityStatus": "Stable"
        },
        "fee": {
          "description": "An amount the bank will charge for executing the payment",
          "$ref": "#/definitions/Fee",
          "x-availabilityStatus": "Beta"
        },
        "payment_status": {
          "type": "string",
          "description": "Status of the payment",
          "enum": [
            "PendingConfirmation",
            "PendingUserApproval",
            "OnHold",
            "Confirmed",
            "Rejected",
            "Paid",
            "InsufficientFunds",
            "LimitExceeded",
            "UserApprovalFailed",
            "UserApprovalTimeout",
            "UserApprovalCancelled",
            "Unknown"
          ],
          "x-availabilityStatus": "Stable"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of payment creation. ISO 8601 format yyyy-mm-ddThh:mm:ss.fffZ",
          "x-availabilityStatus": "Stable"
        },
        "urgency": {
          "type": "string",
          "description": "Urgency of the payment.\nNB: This field is only supported for DK Domestic payments.",
          "enum": [
            "STANDARD",
            "EXPRESS",
            "SAMEDAY"
          ],
          "x-availabilityStatus": "Beta"
        }
      },
      "title": "Payment",
      "description": "Payment information"
    },
    "PaymentCreditorV3": {
      "type": "object",
      "required": [
        "account"
      ],
      "properties": {
        "account": {
          "description": "Account of the creditor",
          "$ref": "#/definitions/AccountNumber",
          "x-availabilityStatus": "Stable"
        },
        "message": {
          "type": "string",
          "example": "Message for the beneficiary",
          "description": "Message for the creditor to appear on their transaction. Max length: FI SEPA:140; SE:12; DK: 40",
          "x-availabilityStatus": "Stable"
        },
        "name": {
          "type": "string",
          "example": "Beneficiary name",
          "description": "Name of the creditor. Max length: FI SEPA: 70; SE: 35; DK: Not use",
          "x-availabilityStatus": "Stable"
        },
        "reference": {
          "description": "Reference for the creditor to appear on their transaction",
          "$ref": "#/definitions/Reference",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "PaymentCreditorV3",
      "description": "Creditor of the payment"
    },
    "PaymentDebtorV3": {
      "type": "object",
      "required": [
        "account"
      ],
      "properties": {
        "account": {
          "description": "Account number",
          "$ref": "#/definitions/AccountNumber",
          "x-availabilityStatus": "Stable"
        },
        "message": {
          "type": "string",
          "example": "Own message",
          "description": "Own message to be on the debitor's transaction. Max length 20.\nNB: This field is not supported for SEPA payments and will be ignored.",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "PaymentDebtorV3",
      "description": "Debtor of the payment"
    },
    "PaymentList": {
      "type": "object",
      "properties": {
        "payments": {
          "type": "array",
          "description": "List of payments",
          "items": {
            "$ref": "#/definitions/Payment"
          },
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "PaymentList",
      "description": "List of payments"
    },
    "PaymentListResponse": {
      "type": "object",
      "properties": {
        "group_header": {
          "description": "Standard format response header",
          "$ref": "#/definitions/ExternalResponseHeaderV3",
          "x-availabilityStatus": "Stable"
        },
        "response": {
          "description": "Payload",
          "$ref": "#/definitions/PaymentList",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "PaymentListResponse",
      "description": "Get list of payments"
    },
    "PaymentResponse": {
      "type": "object",
      "properties": {
        "group_header": {
          "description": "Standard format response header",
          "$ref": "#/definitions/ExternalResponseHeaderV3",
          "x-availabilityStatus": "Stable"
        },
        "response": {
          "description": "Payload",
          "$ref": "#/definitions/Payment",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "PaymentResponse",
      "description": "Payment information response"
    },
    "Reference": {
      "type": "object",
      "required": [
        "_type",
        "value"
      ],
      "properties": {
        "_type": {
          "type": "string",
          "description": "Type of the reference number, e.g. RF",
          "enum": [
            "RF",
            "INVOICE"
          ],
          "x-availabilityStatus": "Stable"
        },
        "value": {
          "type": "string",
          "example": "RF18539007547034",
          "description": "Actual reference number. Max length: FI SEPA: 25; SE: Not use; DK: 25",
          "x-availabilityStatus": "Stable"
        }
      },
      "title": "Reference",
      "description": "Creditor reference number"
    }
  }
}