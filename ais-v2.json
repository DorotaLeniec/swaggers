{
  "swagger": "2.0",
  "info": {
    "description": "Open Banking API",
    "version": "2.1",
    "title": "Nordea Open Banking API",
    "contact": {
      "name": "Open Banking team"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "accounts-v2",
      "description": "Customer accounts"
    }
  ],
  "paths": {
    "/v2/accounts": {
      "get": {
        "tags": [
          "accounts-v2"
        ],
        "summary": "List accounts",
        "operationId": "accountList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountListResponse"
            }
          },
          "401": {
            "description": "Unauthorized with failure code:\n* error.apikey.missing = Missing API key. This operation requires API key, but it was missing.\n* error.token = Unspecified error with supplied token.\n* error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.\n* error.token.expired = Access token has expired.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden with failure code:\n* error.resource.denied = Requested resource is not authorized by access token.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api"
            ],
            "clientId": []
          }
        ],
        "x-availabilityStatus": "Beta"
      }
    },
    "/v2/accounts/{accountId}": {
      "get": {
        "tags": [
          "accounts-v2"
        ],
        "summary": "Get account details by account id",
        "operationId": "accountDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "Internal, technical account identifier",
            "required": true,
            "type": "string",
            "x-availabilityStatus": "Beta"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized with failure code:\n* error.apikey.missing = Missing API key. This operation requires API key, but it was missing.\n* error.token = Unspecified error with supplied token.\n* error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.\n* error.token.expired = Access token has expired.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden with failure code:\n* error.resource.denied = Requested resource is not authorized by access token.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api"
            ],
            "clientId": []
          }
        ],
        "x-availabilityStatus": "Beta"
      }
    },
    "/v2/accounts/{accountId}/transactions": {
      "get": {
        "tags": [
          "accounts-v2"
        ],
        "summary": "Get account transactions",
        "operationId": "transactionsList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "description": "Internal, technical account identifier",
            "required": true,
            "type": "string",
            "x-availabilityStatus": "Beta"
          },
          {
            "in": "query",
            "name": "fromDate",
            "description": "List transactions starting from and including this date",
            "required": false,
            "type": "string",
            "format": "date",
            "x-example": "2017-06-01",
            "x-availabilityStatus": "Beta"
          },
          {
            "in": "query",
            "name": "toDate",
            "description": "List transactions until and including this date",
            "required": false,
            "type": "string",
            "format": "date",
            "x-example": "2017-06-01",
            "x-availabilityStatus": "Beta"
          },
          {
            "in": "query",
            "name": "language",
            "description": "Preferred language for textual values",
            "required": false,
            "type": "string",
            "x-availabilityStatus": "Beta"
          },
          {
            "in": "query",
            "name": "continuationKey",
            "description": "Resource listing may return a continuationKey if there's more results available. Request may be retried with the continuationKey, but otherwise same parameters, in order to get more results.",
            "required": false,
            "type": "string",
            "x-availabilityStatus": "Beta"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransactionListResponse"
            }
          },
          "401": {
            "description": "Unauthorized with failure code:\n* error.apikey.missing = Missing API key. This operation requires API key, but it was missing.\n* error.token = Unspecified error with supplied token.\n* error.token.invalid = Missing access token or token did not authorized requested operation. This operation requires valid access token, but it was missing.\n* error.token.expired = Access token has expired.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden with failure code:\n* error.resource.denied = Requested resource is not authorized by access token.",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api"
            ],
            "clientId": []
          }
        ],
        "x-availabilityStatus": "Beta"
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "authorizationUrl": "/v1/authentication",
      "tokenUrl": "/v1/authentication/access_token",
      "flow": "accessCode",
      "scopes": {
        "api": "Open Banking API"
      }
    },
    "clientId": {
      "type": "apiKey",
      "name": "X-IBM-Client-Id",
      "in": "header"
    }
  },
  "definitions": {
    "AccountListResponse": {
      "type": "object",
      "properties": {
        "groupHeader": {
          "$ref": "#/definitions/ExternalResponseHeader",
          "x-availabilityStatus": "Beta"
        },
        "response": {
          "$ref": "#/definitions/AccountList",
          "x-availabilityStatus": "Beta"
        }
      },
      "x-availabilityStatus": "Beta",
      "x-availabilityInfo": "V2 API is WIP"
    },
    "ExternalResponseHeader": {
      "type": "object",
      "properties": {
        "creationDateTime": {
          "type": "string",
          "format": "date-time",
          "example": "2017-05-19T09:01:17.448Z",
          "x-availabilityStatus": "Stable"
        },
        "httpCode": {
          "type": "integer",
          "format": "int32",
          "example": 12345,
          "x-availabilityStatus": "Stable"
        },
        "messageIdentification": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "messagePagination": {
          "$ref": "#/definitions/Pagination",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "continuationKey": {
          "description": "Resource listing may return a continuationKey if there's more results available. Request may be retried with the continuationKey, but otherwise same parameters, in order to get more results.",
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "AccountList": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountInfo"
          },
          "x-availabilityStatus": "Beta"
        }
      },
      "x-availabilityStatus": "Beta",
      "x-availabilityInfo": "V2 API is WIP"
    },
    "AccountInfo": {
      "type": "object",
      "required": [
        "_id",
        "accountNumber",
        "accountType",
        "availableBalance",
        "bookedBalance",
        "currency",
        "product"
      ],
      "properties": {
        "_id": {
          "description": "Internal, technical account identifier",
          "type": "string",
          "x-availabilityStatus": "Beta"
        },
        "_links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-availabilityStatus": "Beta"
        },
        "accountNumber": {
          "description": "Account number",
          "$ref": "#/definitions/AccountNumber",
          "x-availabilityStatus": "Beta"
        },
        "accountType": {
          "description": "Account type",
          "type": "string",
          "example": "Current",
          "enum": [
            "Current"
          ],
          "x-availabilityStatus": "Beta"
        },
        "availableBalance": {
          "description": "Available balance indicates the funds which are available to the account holder at the time of the query",
          "type": "string",
          "format": "decimal",
          "example": "123.45",
          "x-availabilityStatus": "Beta"
        },
        "bookedBalance": {
          "description": "Booked balance includes all transactions entered on the account at the time of the query",
          "type": "string",
          "format": "decimal",
          "example": "123.45",
          "x-availabilityStatus": "Beta"
        },
        "country": {
          "description": "Country code where the account is held according to ISO ALPHA-2",
          "type": "string",
          "example": "FI",
          "x-availabilityStatus": "Beta"
        },
        "currency": {
          "description": "Currency code according to ISO 4217",
          "type": "string",
          "example": "EUR",
          "x-availabilityStatus": "Beta"
        },
        "ownerName": {
          "type": "string",
          "x-availabilityStatus": "Beta"
        },
        "product": {
          "description": "Name of the banking product delivered by this account",
          "type": "string",
          "x-availabilityStatus": "Beta"
        },
        "valueDatedBalance": {
          "description": "Value dated balance is the balance on the basis of which interest is calculated on the account",
          "type": "string",
          "format": "decimal",
          "example": "123.45",
          "x-availabilityStatus": "Beta"
        }
      },
      "description": "Basic account information",
      "x-availabilityStatus": "Beta",
      "x-availabilityInfo": "V2 API is WIP"
    },
    "Link": {
      "type": "object",
      "required": [
        "href",
        "rel"
      ],
      "properties": {
        "href": {
          "description": "Relative path to the linked resource",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "rel": {
          "description": "Describes the nature of the link, e.g. 'details' for a link to the detailed information of a listed resource.",
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "description": "Context specific link (only GET supported)",
      "x-availabilityStatus": "Stable"
    },
    "AccountNumber": {
      "type": "object",
      "required": [
        "_type",
        "value"
      ],
      "properties": {
        "_type": {
          "description": "Type of account number",
          "type": "string",
          "example": "IBAN",
          "enum": [
            "IBAN",
            "BBAN_SE"
          ],
          "x-availabilityStatus": "Beta"
        },
        "value": {
          "description": "Actual account number",
          "type": "string",
          "example": "FI1350001520000081",
          "x-availabilityStatus": "Beta"
        }
      },
      "description": "Account number",
      "x-availabilityStatus": "Beta"
    },
    "ExternalErrorResponse": {
      "type": "object",
      "properties": {
        "groupHeader": {
          "$ref": "#/definitions/ExternalResponseHeader",
          "x-availabilityStatus": "Stable"
        },
        "response": {
          "$ref": "#/definitions/ExternalError",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "ExternalError": {
      "type": "object",
      "properties": {
        "failures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalFailure"
          },
          "x-availabilityStatus": "Stable"
        },
        "httpCode": {
          "type": "integer",
          "format": "int32",
          "example": 12345,
          "x-availabilityStatus": "Stable"
        },
        "request": {
          "$ref": "#/definitions/ExternalRequestEcho",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "ExternalFailure": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "description": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "path": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "type": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "ExternalRequestEcho": {
      "type": "object",
      "required": [
        "messageIdentifier"
      ],
      "properties": {
        "messageIdentifier": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "url": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "AccountDetailsResponse": {
      "type": "object",
      "properties": {
        "groupHeader": {
          "$ref": "#/definitions/ExternalResponseHeader",
          "x-availabilityStatus": "Beta"
        },
        "response": {
          "$ref": "#/definitions/AccountDetails",
          "x-availabilityStatus": "Beta"
        }
      },
      "x-availabilityStatus": "Beta",
      "x-availabilityInfo": "V2 API is WIP"
    },
    "AccountDetails": {
      "type": "object",
      "required": [
        "_id",
        "accountNumber",
        "accountType",
        "availableBalance",
        "bank",
        "bookedBalance",
        "currency",
        "product",
        "status"
      ],
      "properties": {
        "_id": {
          "description": "Internal, technical account identifier",
          "type": "string",
          "x-availabilityStatus": "Beta"
        },
        "_links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-availabilityStatus": "Beta"
        },
        "accountNumber": {
          "description": "Account number",
          "$ref": "#/definitions/AccountNumber",
          "x-availabilityStatus": "Beta"
        },
        "accountType": {
          "description": "Account type",
          "type": "string",
          "example": "Current",
          "enum": [
            "Current"
          ],
          "x-availabilityStatus": "Beta"
        },
        "availableBalance": {
          "description": "Available balance indicates the funds which are available to the account holder at the time of the query",
          "type": "string",
          "format": "decimal",
          "example": "123.45",
          "x-availabilityStatus": "Beta"
        },
        "bank": {
          "$ref": "#/definitions/BankInfo",
          "x-availabilityStatus": "Draft"
        },
        "bookedBalance": {
          "description": "Booked balance includes all transactions entered on the account at the time of the query",
          "type": "string",
          "format": "decimal",
          "example": "123.45",
          "x-availabilityStatus": "Beta"
        },
        "country": {
          "description": "Country code where the account is held according to ISO ALPHA-2",
          "type": "string",
          "example": "FI",
          "x-availabilityStatus": "Beta"
        },
        "creditLimit": {
          "description": "Amount of credit extended to account holder beyond account booked balance",
          "type": "string",
          "format": "decimal",
          "example": "123.45",
          "x-availabilityStatus": "Beta"
        },
        "currency": {
          "description": "Currency code according to ISO 4217",
          "type": "string",
          "example": "EUR",
          "x-availabilityStatus": "Beta"
        },
        "latestTransactionBookingDate": {
          "description": "Date of last transaction booked to the account",
          "type": "string",
          "format": "date",
          "example": "2017-06-01",
          "x-availabilityStatus": "Beta"
        },
        "ownerName": {
          "type": "string",
          "x-availabilityStatus": "Beta"
        },
        "product": {
          "description": "Name of the banking product delivered by this account",
          "type": "string",
          "x-availabilityStatus": "Beta"
        },
        "status": {
          "description": "Status of account",
          "type": "string",
          "x-availabilityStatus": "Beta"
        },
        "valueDatedBalance": {
          "description": "Value dated balance is the balance on the basis of which interest is calculated on the account",
          "type": "string",
          "format": "decimal",
          "example": "123.45",
          "x-availabilityStatus": "Beta"
        }
      },
      "description": "Detailed account information",
      "x-availabilityStatus": "Beta",
      "x-availabilityInfo": "V2 API is WIP"
    },
    "BankInfo": {
      "type": "object",
      "required": [
        "bic",
        "country",
        "name"
      ],
      "properties": {
        "bic": {
          "description": "Business Identifier Code of account servicing institution according to ISO 9362.",
          "type": "string",
          "example": "NDEAFIHH",
          "x-availabilityStatus": "Beta"
        },
        "country": {
          "description": "Country code according to ISO Alpha-2",
          "type": "string",
          "example": "FI",
          "x-availabilityStatus": "Beta"
        },
        "name": {
          "description": "Unit name",
          "type": "string",
          "x-availabilityStatus": "Beta"
        }
      },
      "x-availabilityStatus": "Beta"
    },
    "TransactionListResponse": {
      "type": "object",
      "properties": {
        "groupHeader": {
          "$ref": "#/definitions/ExternalResponseHeader",
          "x-availabilityStatus": "Beta"
        },
        "response": {
          "$ref": "#/definitions/TransactionList",
          "x-availabilityStatus": "Beta"
        }
      },
      "x-availabilityStatus": "Beta",
      "x-availabilityInfo": "V2 API is WIP"
    },
    "TransactionList": {
      "type": "object",
      "properties": {
        "_continuationKey": {
          "type": "string",
          "x-availabilityStatus": "Beta"
        },
        "_links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-availabilityStatus": "Beta"
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "x-availabilityStatus": "Beta"
        }
      },
      "description": "List of transactions",
      "x-availabilityStatus": "Beta",
      "x-availabilityInfo": "V2 API is WIP"
    },
    "Transaction": {
      "type": "object",
      "required": [
        "_type",
        "bookingDate",
        "currency",
        "transactionId"
      ],
      "discriminator": "_type",
      "properties": {
        "_type": {
          "description": "Actual type (model) of the transaction, either CreditTransaction or DebitTransaction",
          "type": "string",
          "example": "CreditTransaction",
          "enum": [
            "CreditTransaction",
            "DebitTransaction"
          ],
          "x-availabilityStatus": "Beta"
        },
        "amount": {
          "type": "string",
          "format": "decimal",
          "example": "123.45",
          "x-availabilityStatus": "Beta"
        },
        "bookingDate": {
          "description": "Date transaction was booked to the account ledger",
          "type": "string",
          "format": "date",
          "example": "2017-06-01",
          "x-availabilityStatus": "Beta"
        },
        "currency": {
          "description": "Currency code according to ISO 4217",
          "type": "string",
          "example": "EUR",
          "x-availabilityStatus": "Beta"
        },
        "message": {
          "description": "Message from remitter to beneficiary. In Finland this may alternatively include a short description of the transaction e.g. 'Automaattiotto'",
          "type": "string",
          "x-availabilityStatus": "Beta"
        },
        "reference": {
          "description": "Reference number",
          "$ref": "#/definitions/Reference",
          "x-availabilityStatus": "Draft"
        },
        "transactionId": {
          "description": "Unique transaction identifier as defined by the bank",
          "type": "string",
          "x-availabilityStatus": "Beta"
        },
        "typeDescription": {
          "description": "Description of the type of transaction, e.g. Cash withdrawal, Account transfer, etc. (localized)",
          "type": "string",
          "example": "ATM Cash Withdrawal",
          "x-availabilityStatus": "Beta"
        },
        "valueDate": {
          "description": "Value date of the transaction, used for interest calculation",
          "type": "string",
          "format": "date",
          "example": "2017-06-01",
          "x-availabilityStatus": "Beta"
        }
      },
      "x-availabilityStatus": "Beta",
      "x-availabilityInfo": "V2 API is WIP"
    },
    "CreditTransaction": {
      "description": "Credit transaction with positive (or zero) amount",
      "allOf": [
        {
          "$ref": "#/definitions/Transaction"
        },
        {
          "type": "object",
          "properties": {
            "debtorName": {
              "description": "Payer name",
              "type": "string",
              "x-availabilityStatus": "Beta"
            }
          }
        }
      ],
      "x-availabilityStatus": "Beta",
      "x-availabilityInfo": "V2 API is WIP"
    },
    "Reference": {
      "type": "object",
      "required": [
        "_type",
        "value"
      ],
      "properties": {
        "_type": {
          "description": "Type of the reference number, e.g. RF",
          "type": "string",
          "example": "RF",
          "enum": [
            "RF",
            "INVOICE"
          ],
          "x-availabilityStatus": "Beta"
        },
        "value": {
          "description": "Actual reference number",
          "type": "string",
          "example": "RF18539007547034",
          "x-availabilityStatus": "Beta"
        }
      },
      "description": "Creditor reference number",
      "x-availabilityStatus": "Beta"
    },
    "DebitTransaction": {
      "description": "Debit transaction with negative amount",
      "allOf": [
        {
          "$ref": "#/definitions/Transaction"
        },
        {
          "type": "object",
          "properties": {
            "creditorAccount": {
              "description": "Payee account number",
              "$ref": "#/definitions/AccountNumber",
              "x-availabilityStatus": "Draft"
            },
            "creditorName": {
              "description": "Name of the payee",
              "type": "string",
              "x-availabilityStatus": "Beta"
            },
            "debtorMessage": {
              "description": "Placeholder for DK own message",
              "type": "string",
              "x-availabilityStatus": "Draft",
              "x-availabilityInfo": "Placeholder for Danish own message"
            }
          }
        }
      ],
      "x-availabilityStatus": "Beta",
      "x-availabilityInfo": "V2 API is WIP"
    }
  }
}
