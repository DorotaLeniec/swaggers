{
  "swagger": "2.0",
  "info": {
    "description": "Open Banking API",
    "version": "2.1.0-SNAPSHOT",
    "title": "Nordea Common Open Banking API v2",
    "contact": {
      "name": "Open Banking team"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "mockibo-dev.nordeaopenbanking.com",
  "basePath": "/",
  "tags": [
    {
      "name": "api-info",
      "description": "API entry point"
    },
    {
      "name": "authorization-se",
      "description": "Authorization decoupled"
    },
    {
      "name": "assets-v2",
      "description": "Get user assets"
    },
    {
      "name": "authentication"
    }
  ],
  "paths": {
    "/v2": {
      "get": {
        "tags": [
          "api-info"
        ],
        "summary": "Get API info",
        "description": "API entry point",
        "operationId": "apiInfo",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Info"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ACCOUNTS_BASIC",
              "ACCOUNTS_BALANCES",
              "ACCOUNTS_DETAILS",
              "ACCOUNTS_TRANSACTIONS",
              "PAYMENTS_ONETIME",
              "PAYMENTS_MULTIPLE"
            ],
            "clientId": []
          }
        ],
        "x-availabilityStatus": "Stable"
      }
    },
    "/v2/authorize-decoupled": {
      "post": {
        "tags": [
          "authorization-se"
        ],
        "summary": "Start authorization",
        "description": "Starting authorization decoupled, not requiring the redirection OAuth dance",
        "operationId": "authorize",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Request for authorization",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SEAuthorizeRequestBodyV2"
            },
            "x-availabilityStatus": "Beta"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a token and a order_ref to be used in the status request",
            "schema": {
              "$ref": "#/definitions/AuthorizeResponse"
            }
          }
        },
        "x-availabilityStatus": "Beta"
      }
    },
    "/v2/authorize-decoupled/token": {
      "post": {
        "tags": [
          "authorization-se"
        ],
        "summary": "Exchange authorization code for access token",
        "description": "Exchange authorization code for access token",
        "operationId": "getToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "accessTokenRequest",
            "description": "Request for access token",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessTokenRequest"
            },
            "x-availabilityStatus": "Beta"
          }
        ],
        "responses": {
          "200": {
            "description": "Exchange authorization code for a access_token",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        },
        "x-availabilityStatus": "Beta"
      }
    },
    "/v2/authorize-decoupled/{order_ref}": {
      "get": {
        "tags": [
          "authorization-se"
        ],
        "summary": "Exchange tpp token for authorization code",
        "description": "By using the TPP token exchange it and get auth code for the next request",
        "operationId": "getStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "order_ref",
            "description": "Order reference uuid",
            "required": true,
            "type": "string",
            "x-availabilityStatus": "Beta"
          }
        ],
        "responses": {
          "200": {
            "description": "Exchange TPP token for authorization code",
            "schema": {
              "$ref": "#/definitions/AuthCodeResponse"
            }
          },
          "304": {
            "description": "Waiting for customer",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "403": {
            "description": "TPP token is expired or invalid",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          },
          "408": {
            "description": "The request has timed out",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          }
        },
        "x-availabilityStatus": "Beta"
      }
    },
    "/v2/assets": {
      "get": {
        "tags": [
          "assets-v2"
        ],
        "summary": "Get user assets",
        "description": "Get user assets",
        "operationId": "getAssets",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssetResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ACCOUNTS_BASIC",
              "ACCOUNTS_BALANCES",
              "ACCOUNTS_DETAILS",
              "ACCOUNTS_TRANSACTIONS",
              "PAYMENTS_ONETIME",
              "PAYMENTS_MULTIPLE"
            ],
            "clientId": []
          }
        ],
        "x-availabilityStatus": "Stable"
      }
    },
    "/v2/authorize": {
      "get": {
        "tags": [
          "authentication"
        ],
        "operationId": "startAuthentication",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "state",
            "required": true,
            "type": "string",
            "x-availabilityStatus": "Stable"
          },
          {
            "in": "query",
            "name": "client_id",
            "required": true,
            "type": "string",
            "x-availabilityStatus": "Stable"
          },
          {
            "in": "query",
            "name": "redirect_uri",
            "required": true,
            "type": "string",
            "x-availabilityStatus": "Stable"
          },
          {
            "in": "query",
            "name": "scope",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "example": "ACCOUNTS_BASIC",
              "enum": [
                "ACCOUNTS_BASIC",
                "ACCOUNTS_BALANCES",
                "ACCOUNTS_DETAILS",
                "ACCOUNTS_TRANSACTIONS",
                "PAYMENTS_ONETIME",
                "PAYMENTS_MULTIPLE"
              ]
            },
            "x-availabilityStatus": "Stable"
          },
          {
            "in": "query",
            "name": "duration",
            "required": true,
            "type": "integer",
            "format": "int32",
            "x-example": 12345,
            "x-availabilityStatus": "Stable"
          },
          {
            "in": "query",
            "name": "language",
            "required": false,
            "type": "string",
            "enum": [
              "fi",
              "sv",
              "da",
              "no",
              "en"
            ],
            "x-example": "fi",
            "x-availabilityStatus": "Stable"
          },
          {
            "in": "query",
            "name": "accounts",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-availabilityStatus": "Stable"
          },
          {
            "in": "query",
            "name": "max_tx_history",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-example": 12345,
            "x-availabilityStatus": "Stable"
          },
          {
            "in": "query",
            "name": "uid",
            "required": false,
            "type": "string",
            "x-availabilityStatus": "SandboxOnly"
          },
          {
            "in": "header",
            "name": "X-Response-Scenarios",
            "required": false,
            "type": "string",
            "enum": [
              "AuthenticationSkipUI",
              "AuthenticationWithUI"
            ],
            "x-availabilityStatus": "SandboxOnly"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to OAuth provider",
            "schema": {
              "$ref": "#/definitions/ExternalErrorResponse"
            }
          }
        },
        "x-availabilityStatus": "Stable"
      }
    },
    "/v2/authorize/access_token": {
      "post": {
        "tags": [
          "authentication"
        ],
        "operationId": "accessToken",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "code",
            "required": true,
            "type": "string",
            "x-availabilityStatus": "Stable"
          },
          {
            "in": "formData",
            "name": "redirect_uri",
            "required": true,
            "type": "string",
            "x-availabilityStatus": "Stable"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        },
        "x-availabilityStatus": "Stable"
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "authorizationUrl": "/v2/authorize",
      "tokenUrl": "/v2/authorize/access_token",
      "flow": "accessCode",
      "scopes": {
        "ACCOUNTS_BASIC": "Account information",
        "ACCOUNTS_BALANCES": "Account information with balances",
        "ACCOUNTS_DETAILS": "Account information with details",
        "ACCOUNTS_TRANSACTIONS": "Account's transactions",
        "PAYMENTS_ONETIME": "Payments Onetime",
        "PAYMENTS_MULTIPLE": "Payments Multiple"
      }
    },
    "clientId": {
      "type": "apiKey",
      "name": "X-IBM-Client-Id",
      "in": "header"
    }
  },
  "definitions": {
    "Info": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link-1",
            "x-availabilityStatus": "Stable"
          },
          "x-availabilityStatus": "Stable"
        },
        "description": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "version": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "Link-1": {
      "type": "object",
      "required": [
        "href",
        "rel"
      ],
      "properties": {
        "href": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "rel": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "SEAuthorizeRequestBodyV2": {
      "type": "object",
      "required": [
        "account_list",
        "duration",
        "psu_id",
        "response_type",
        "scope"
      ],
      "properties": {
        "account_list": {
          "description": "Account list",
          "type": "array",
          "items": {
            "description": "Account list",
            "type": "string"
          },
          "x-availabilityStatus": "Stable"
        },
        "duration": {
          "description": "Duration of access token in minutes",
          "type": "integer",
          "format": "int32",
          "example": 3600,
          "minimum": 1,
          "exclusiveMinimum": false,
          "maximum": 129600,
          "exclusiveMaximum": false,
          "x-availabilityStatus": "Stable"
        },
        "language": {
          "description": "Language of message that will be displayed to client of bankId mobile app, ISO639-1 and 639-2",
          "type": "string",
          "example": "sv",
          "x-availabilityStatus": "Stable"
        },
        "max_tx_history": {
          "description": "Number of months for requested transaction history. Only applicable if ACCOUNTS_TRANSACTIONS scope is requested",
          "type": "integer",
          "format": "int32",
          "example": 10,
          "x-availabilityStatus": "Stable"
        },
        "psu_id": {
          "description": "ID, FI: the netbank agreement number, International Units (UK / DE): the netbank company id, SE: Social Security Number",
          "type": "string",
          "example": "193805010844",
          "x-availabilityStatus": "Stable"
        },
        "redirect_uri": {
          "description": "Redirection URI",
          "type": "string",
          "example": "http://some.uri",
          "x-availabilityStatus": "Stable"
        },
        "response_type": {
          "description": "Response type, for decoupled authorization this should be 'nordea_token'",
          "type": "string",
          "example": "nordea_token",
          "x-availabilityStatus": "Stable"
        },
        "scope": {
          "description": "Scope list",
          "type": "array",
          "items": {
            "description": "Scope list",
            "type": "string"
          },
          "x-availabilityStatus": "Stable"
        },
        "state": {
          "description": "State",
          "type": "string",
          "example": "anyString",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "AuthorizeResponse": {
      "type": "object",
      "properties": {
        "groupHeader": {
          "$ref": "#/definitions/ExternalResponseHeader",
          "x-availabilityStatus": "Stable"
        },
        "response": {
          "$ref": "#/definitions/SEAuthorizeResponseV2",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "ExternalResponseHeader": {
      "type": "object",
      "properties": {
        "creationDateTime": {
          "description": "Response creation time",
          "type": "string",
          "format": "date-time",
          "example": "2017-05-19T09:01:17.448Z",
          "x-availabilityStatus": "Stable"
        },
        "httpCode": {
          "description": "HTTP code for response",
          "type": "integer",
          "format": "int32",
          "example": 12345,
          "x-availabilityStatus": "Stable"
        },
        "messageIdentification": {
          "description": "Original request id for correlation purposes",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "messagePagination": {
          "description": "Details of paginated response",
          "$ref": "#/definitions/Pagination",
          "x-availabilityStatus": "Stable"
        }
      },
      "description": "External response header",
      "x-availabilityStatus": "Stable"
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "continuationKey": {
          "description": "Resource listing may return a continuationKey if there's more results available. Request may be retried with the continuationKey, but otherwise same parameters, in order to get more results.",
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "description": "Details of paginated response",
      "x-availabilityStatus": "Stable"
    },
    "SEAuthorizeResponseV2": {
      "type": "object",
      "required": [
        "order_ref",
        "status",
        "tpp_token"
      ],
      "properties": {
        "links": {
          "description": "Links to other actions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link-2"
          },
          "x-availabilityStatus": "Stable"
        },
        "order_ref": {
          "description": "order ref",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "status": {
          "description": "status",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "tpp_token": {
          "description": "tpp_token",
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "Link-2": {
      "type": "object",
      "properties": {
        "deprecation": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "href": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "hreflang": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "media": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "rel": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "templated": {
          "type": "boolean",
          "x-availabilityStatus": "Stable"
        },
        "title": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "type": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "UriTemplate": {
      "type": "object",
      "properties": {
        "variableNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-availabilityStatus": "Stable"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateVariable"
          },
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "TemplateVariable": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "name": {
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "type": {
          "type": "string",
          "example": "PATH_VARIABLE",
          "enum": [
            "PATH_VARIABLE",
            "REQUEST_PARAM",
            "REQUEST_PARAM_CONTINUED",
            "SEGMENT",
            "FRAGMENT"
          ],
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "AccessTokenRequest": {
      "type": "object",
      "x-availabilityStatus": "Stable"
    },
    "Token": {
      "type": "object",
      "properties": {
        "access_token": {
          "description": "Access token",
          "type": "string",
          "example": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiZGlyIn0..EM2YgJGre7OTIpmA.8GmpStB05uh4u_1wrEpyVCV_P5XwTcbL7zF_NsZJaMcZvo3B78gqhDR2lCCGLbTTImM4ILGHEQXO5Q7-obmdacIk9jcRr2eg5lTj_MBk9ch9yCMGh1NLEtXfOuHO1WzLoR6njQLDHdvvA2M3MEnVToqF6NdRI5f1hpWwC75TwUJWG50YTTYUBJskGPuRMLPfuTH-sncyVpI5Pj-XwXgcwOuXq8mz87DE1ZCCxPollReFZFsriQO3FeAqdgKigLaDH_WsoromxG2RAz6u4de-IYwXeWhsyq81SvOICE29kLMl9uxCvp6frYzOHoe7rfSaJiPhWGLn4_l29GimVNepQi1BadFqvHUyr7pUtO4Nx8e3piN7RV4DpMu1mf8_BYJaNUMyaeismu7RS9CmXm8wiEwgxK6f6vSOZxK6X8k7EHNKmZJZyR0q5ZRtFMzNa27tFah5_CybeJ86dJYIoaS1yG4rwBhokM06lVwAUAnpjXSRdoD7VUeNeg70DvTS2rtLa_w0_RLpva-iGkup-GIQyURK_jDZF2dVlRIanA8cwF6PZTA4cVslCd6EScJx9AHG87MmiWs6j0KOLZRyun3N3BEeRrjjcPk_lc3zcd8E2MZB4l-4o69cYvgAk1DpkxB__3IyuVkTEGwxlvT04anjsGLXEiunvQnDlAyEApr4xBeIGA2tAU8sstOQgGQffRj17iXWFgh4n5uHP77wrA4_d1tydAGCBhEVk6tsUVA81cavlwEfF53Yn1SK9bVofKv412tzU8fzNecni0IAsuWsCLGX.z3MMhpzmMp-GwdbTSl2rWQ",
          "x-availabilityStatus": "Stable"
        },
        "expires_in": {
          "description": "Token expiration time",
          "type": "integer",
          "format": "int64",
          "example": 1209599,
          "x-availabilityStatus": "Stable"
        },
        "token_type": {
          "description": "Token type",
          "type": "string",
          "example": "Bearer",
          "enum": [
            "BEARER"
          ],
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "AuthCodeResponse": {
      "type": "object",
      "properties": {
        "groupHeader": {
          "$ref": "#/definitions/ExternalResponseHeader",
          "x-availabilityStatus": "Stable"
        },
        "response": {
          "$ref": "#/definitions/SEAuthCodeResponseV2",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "SEAuthCodeResponseV2": {
      "type": "object",
      "required": [
        "code",
        "state"
      ],
      "properties": {
        "code": {
          "description": "authorization code",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link-2"
          },
          "x-availabilityStatus": "Stable"
        },
        "state": {
          "description": "state",
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "ExternalErrorResponse": {
      "type": "object",
      "properties": {
        "groupHeader": {
          "description": "Standard format response header",
          "$ref": "#/definitions/ExternalResponseHeader",
          "x-availabilityStatus": "Stable"
        },
        "response": {
          "description": "Error details",
          "$ref": "#/definitions/ExternalError",
          "x-availabilityStatus": "Stable"
        }
      },
      "description": "Error response",
      "x-availabilityStatus": "Stable"
    },
    "ExternalError": {
      "type": "object",
      "properties": {
        "failures": {
          "description": "More details on the occurred error",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalFailure"
          },
          "x-availabilityStatus": "Stable"
        },
        "httpCode": {
          "description": "HTTP error for response",
          "type": "integer",
          "format": "int32",
          "example": 12345,
          "x-availabilityStatus": "Stable"
        },
        "request": {
          "description": "Error details",
          "$ref": "#/definitions/ExternalRequestEcho",
          "x-availabilityStatus": "Stable"
        }
      },
      "description": "Error information",
      "x-availabilityStatus": "Stable"
    },
    "ExternalFailure": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Failure code",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "description": {
          "description": "Failure description",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "path": {
          "description": "The failed component path",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "type": {
          "description": "Failure type",
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "description": "Failure description",
      "x-availabilityStatus": "Stable"
    },
    "ExternalRequestEcho": {
      "type": "object",
      "required": [
        "messageIdentifier"
      ],
      "properties": {
        "messageIdentifier": {
          "description": "Original request id for correlation purposes",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "url": {
          "description": "Original request url",
          "type": "string",
          "x-availabilityStatus": "Stable"
        }
      },
      "description": "Original request information",
      "x-availabilityStatus": "Stable"
    },
    "AssetResponse": {
      "type": "object",
      "properties": {
        "groupHeader": {
          "$ref": "#/definitions/ExternalResponseHeader",
          "x-availabilityStatus": "Stable"
        },
        "response": {
          "$ref": "#/definitions/AssetsPayload",
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "AssetsPayload": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountPayload"
          },
          "x-availabilityStatus": "Stable"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "ACCOUNTS_BASIC",
            "enum": [
              "ACCOUNTS_BASIC",
              "ACCOUNTS_BALANCES",
              "ACCOUNTS_DETAILS",
              "ACCOUNTS_TRANSACTIONS",
              "PAYMENTS_ONETIME",
              "PAYMENTS_MULTIPLE"
            ]
          },
          "x-availabilityStatus": "Stable"
        }
      },
      "x-availabilityStatus": "Stable"
    },
    "AccountPayload": {
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Internal, technical account identifier",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "accountNumber": {
          "description": "Account number",
          "type": "string",
          "x-availabilityStatus": "Stable"
        },
        "currency": {
          "description": "Currency code according to ISO 4217",
          "type": "string",
          "example": "EUR",
          "x-availabilityStatus": "Stable"
        }
      },
      "description": "Account information",
      "x-availabilityStatus": "Stable"
    }
  }
}